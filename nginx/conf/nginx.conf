# nginx.conf for GCAGolfApp

# Defines the user and group Nginx will run as.
# On Windows, this is less critical but good practice to keep.
# user  nobody;

# The number of worker processes. Should generally be equal to the number of CPU cores.
worker_processes  1;

# Error log location and verbosity.
# This global error log will capture issues before a server block is processed.
# Ensure C:/Users/ianstrom/DevelopmentProjects/GCAGolfApp/nginx/logs/ directory exists.
error_log  C:/Users/ianstrom/DevelopmentProjects/GCAGolfApp/nginx/logs/error.log warn;

# File containing the process ID of the main Nginx process.
pid        C:/Users/ianstrom/DevelopmentProjects/GCAGolfApp/nginx/logs/nginx.pid;

events {
    # Max number of simultaneous connections that can be opened by a worker process.
    worker_connections  1024;
}

http {
    # Includes a file defining MIME types of files.
    include       mime.types;
    # Default MIME type for files if not otherwise specified.
    default_type  application/octet-stream;

    # Log format definition. 'main' is a common name for a standard format.
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # Default access log for all server blocks if not specified within them.
    # Ensure C:/Users/ianstrom/DevelopmentProjects/GCAGolfApp/nginx/logs/ directory exists.
    access_log  C:/Users/ianstrom/DevelopmentProjects/GCAGolfApp/nginx/logs/access.log  main;

    # Optimizes file sending.
    sendfile        on;
    # Allows Nginx to send HTTP response headers and the beginning of a file in one packet.
    # tcp_nopush     on;

    # Timeout for keep-alive connections with the client.
    keepalive_timeout  65;

    # Enables or disables gzip compression.
    # gzip  on;

    # Defines the upstream group for the Django backend application server (Waitress).
    upstream django_backend {
        # Address and port where Waitress (or your Django app server) is running.
        # This should match BACKEND_SERVER_PORT in your backend/.env.backend file.
        server 127.0.0.1:8000;
    }

    # Defines a virtual server.
    server {
        # Port Nginx will listen on for this server block. 80 is standard HTTP.
        listen       80;
        # Server name(s) for this block. 'localhost' is for local access.
        server_name  localhost;

        # Character set for responses.
        # charset utf-8;

        # Per-server access and error logs (optional if global ones are sufficient).
        # These will also go into the logs directory we created.
        # access_log  C:/Users/ianstrom/DevelopmentProjects/GCAGolfApp/nginx/logs/gcagolfapp.server.access.log main;
        # error_log   C:/Users/ianstrom/DevelopmentProjects/GCAGolfApp/nginx/logs/gcagolfapp.server.error.log warn;

        # Location block for API requests.
        # All requests starting with /api/ will be proxied to the Django backend.
        location /api/ {
            proxy_pass http://django_backend; # Forwards request to the 'django_backend' upstream group.
            # Sets headers to pass information about the original request to the backend.
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $host;
            proxy_redirect off; # Prevents Nginx from rewriting redirects from the backend.
            proxy_buffering off; # Useful for streaming responses or long polling.
        }

        # Location block for Django admin static files.
        # This is used if you run `python manage.py collectstatic` for the Django admin interface.
        # The alias directive maps this URL path to a filesystem path.
        # STATIC_ROOT in settings.py is 'backend/staticfiles'.
        location /static_admin/ {
            alias C:/Users/ianstrom/DevelopmentProjects/GCAGolfApp/backend/staticfiles/;
        }

        # Location block for serving the static React frontend assets.
        # This is the default block if no other location matches.
        location / {
            # Root directory from which to serve frontend files.
            # This should point to your React app's build output directory.
            root   C:/Users/ianstrom/DevelopmentProjects/GCAGolfApp/frontend/build;
            # For Single Page Applications (SPAs), tries to serve the requested file/directory.
            # If not found, it serves /index.html, allowing React Router to handle routing.
            try_files $uri $uri/ /index.html;
            # Caching control for development. Tells browser not to cache.
            add_header Cache-Control "no-cache";
        }

        # Custom error pages (optional).
        # error_page   500 502 503 504  /50x.html;
        # location = /50x.html {
        #     root   html; # Nginx's default html directory
        # }
    }

    # Another server block for HTTPS could be added here later.
    # server {
    #     listen       443 ssl;
    #     server_name  localhost;
    #
    #     ssl_certificate      cert.pem;
    #     ssl_certificate_key  key.pem;
    #
    #     # ... other SSL settings ...
    #
    #     location / {
    #         # ... same as HTTP location / ...
    #     }
    # }
}
