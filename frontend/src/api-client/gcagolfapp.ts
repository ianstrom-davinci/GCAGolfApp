/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/golf/sessions/": {
    /** @description API endpoint that allows golf sessions to be viewed or edited. */
    get: operations["api_golf_sessions_list"];
    /** @description API endpoint that allows golf sessions to be viewed or edited. */
    post: operations["api_golf_sessions_create"];
  };
  "/api/golf/sessions/{id}/": {
    /** @description API endpoint that allows golf sessions to be viewed or edited. */
    get: operations["api_golf_sessions_retrieve"];
    /** @description API endpoint that allows golf sessions to be viewed or edited. */
    put: operations["api_golf_sessions_update"];
    /** @description API endpoint that allows golf sessions to be viewed or edited. */
    delete: operations["api_golf_sessions_destroy"];
    /** @description API endpoint that allows golf sessions to be viewed or edited. */
    patch: operations["api_golf_sessions_partial_update"];
  };
  "/api/golf/shots/": {
    /**
     * @description API endpoint that allows individual shot data to be viewed or edited.
     * Supports filtering by session ID. E.g., /api/golf/shots/?session_id=1
     */
    get: operations["api_golf_shots_list"];
    /**
     * @description API endpoint that allows individual shot data to be viewed or edited.
     * Supports filtering by session ID. E.g., /api/golf/shots/?session_id=1
     */
    post: operations["api_golf_shots_create"];
  };
  "/api/golf/shots/{id}/": {
    /**
     * @description API endpoint that allows individual shot data to be viewed or edited.
     * Supports filtering by session ID. E.g., /api/golf/shots/?session_id=1
     */
    get: operations["api_golf_shots_retrieve"];
    /**
     * @description API endpoint that allows individual shot data to be viewed or edited.
     * Supports filtering by session ID. E.g., /api/golf/shots/?session_id=1
     */
    put: operations["api_golf_shots_update"];
    /**
     * @description API endpoint that allows individual shot data to be viewed or edited.
     * Supports filtering by session ID. E.g., /api/golf/shots/?session_id=1
     */
    delete: operations["api_golf_shots_destroy"];
    /**
     * @description API endpoint that allows individual shot data to be viewed or edited.
     * Supports filtering by session ID. E.g., /api/golf/shots/?session_id=1
     */
    patch: operations["api_golf_shots_partial_update"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    GolfSession: {
      id: number;
      /** @description Optional name for the session */
      session_name?: string | null;
      /** Format: date-time */
      start_time?: string;
      /** Format: date-time */
      end_time?: string | null;
      /** Format: date-time */
      created_at: string;
      shots: readonly components["schemas"]["ShotData"][];
    };
    GolfSessionCreate: {
      /** @description Optional name for the session */
      session_name?: string | null;
      /** Format: date-time */
      start_time?: string;
      /** Format: date-time */
      end_time?: string | null;
    };
    PaginatedGolfSessionList: {
      /** @example 123 */
      count: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string | null;
      results: components["schemas"]["GolfSession"][];
    };
    PaginatedShotDataList: {
      /** @example 123 */
      count: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string | null;
      results: components["schemas"]["ShotData"][];
    };
    PatchedGolfSessionCreate: {
      /** @description Optional name for the session */
      session_name?: string | null;
      /** Format: date-time */
      start_time?: string;
      /** Format: date-time */
      end_time?: string | null;
    };
    PatchedShotData: {
      id?: number;
      /** Format: date-time */
      timestamp?: string;
      /**
       * Format: double
       * @description mph or km/h
       */
      ball_speed?: number | null;
      /**
       * Format: double
       * @description mph or km/h
       */
      club_head_speed?: number | null;
      /**
       * Format: double
       * @description degrees
       */
      launch_angle?: number | null;
      /**
       * Format: double
       * @description rpm (backspin)
       */
      spin_rate?: number | null;
      /**
       * Format: double
       * @description rpm (positive for slice/fade, negative for hook/draw for RH golfer)
       */
      side_spin_rate?: number | null;
      /**
       * Format: double
       * @description yards or meters
       */
      carry_distance?: number | null;
      /**
       * Format: double
       * @description yards or meters
       */
      total_distance?: number | null;
      /**
       * Format: double
       * @description Ball Speed / Club Head Speed
       */
      smash_factor?: number | null;
      /**
       * Format: double
       * @description Peak height of ball trajectory in feet
       */
      apex_height?: number | null;
      /**
       * Format: double
       * @description Distance offline from target in yards/meters (positive for right, negative for left of target line)
       */
      lateral_deviation?: number | null;
      /**
       * Format: double
       * @description Angle of attack in degrees (positive for up, negative for down)
       */
      attack_angle?: number | null;
      /**
       * Format: double
       * @description Club path in degrees (positive for in-to-out, negative for out-to-in)
       */
      club_path?: number | null;
      /**
       * Format: double
       * @description Club face angle at impact in degrees (positive for open, negative for closed, relative to target)
       */
      face_angle?: number | null;
      /** Format: date-time */
      created_at?: string;
      /** Format: date-time */
      updated_at?: string;
      session?: number | null;
    };
    ShotData: {
      id: number;
      /** Format: date-time */
      timestamp?: string;
      /**
       * Format: double
       * @description mph or km/h
       */
      ball_speed?: number | null;
      /**
       * Format: double
       * @description mph or km/h
       */
      club_head_speed?: number | null;
      /**
       * Format: double
       * @description degrees
       */
      launch_angle?: number | null;
      /**
       * Format: double
       * @description rpm (backspin)
       */
      spin_rate?: number | null;
      /**
       * Format: double
       * @description rpm (positive for slice/fade, negative for hook/draw for RH golfer)
       */
      side_spin_rate?: number | null;
      /**
       * Format: double
       * @description yards or meters
       */
      carry_distance?: number | null;
      /**
       * Format: double
       * @description yards or meters
       */
      total_distance?: number | null;
      /**
       * Format: double
       * @description Ball Speed / Club Head Speed
       */
      smash_factor?: number | null;
      /**
       * Format: double
       * @description Peak height of ball trajectory in feet
       */
      apex_height?: number | null;
      /**
       * Format: double
       * @description Distance offline from target in yards/meters (positive for right, negative for left of target line)
       */
      lateral_deviation?: number | null;
      /**
       * Format: double
       * @description Angle of attack in degrees (positive for up, negative for down)
       */
      attack_angle?: number | null;
      /**
       * Format: double
       * @description Club path in degrees (positive for in-to-out, negative for out-to-in)
       */
      club_path?: number | null;
      /**
       * Format: double
       * @description Club face angle at impact in degrees (positive for open, negative for closed, relative to target)
       */
      face_angle?: number | null;
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
      session?: number | null;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** @description API endpoint that allows golf sessions to be viewed or edited. */
  api_golf_sessions_list: {
    parameters: {
      query?: {
        /** @description A page number within the paginated result set. */
        page?: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["PaginatedGolfSessionList"];
        };
      };
    };
  };
  /** @description API endpoint that allows golf sessions to be viewed or edited. */
  api_golf_sessions_create: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["GolfSessionCreate"];
        "application/x-www-form-urlencoded": components["schemas"]["GolfSessionCreate"];
        "multipart/form-data": components["schemas"]["GolfSessionCreate"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["GolfSessionCreate"];
        };
      };
    };
  };
  /** @description API endpoint that allows golf sessions to be viewed or edited. */
  api_golf_sessions_retrieve: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this golf session. */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["GolfSession"];
        };
      };
    };
  };
  /** @description API endpoint that allows golf sessions to be viewed or edited. */
  api_golf_sessions_update: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this golf session. */
        id: number;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["GolfSessionCreate"];
        "application/x-www-form-urlencoded": components["schemas"]["GolfSessionCreate"];
        "multipart/form-data": components["schemas"]["GolfSessionCreate"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["GolfSessionCreate"];
        };
      };
    };
  };
  /** @description API endpoint that allows golf sessions to be viewed or edited. */
  api_golf_sessions_destroy: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this golf session. */
        id: number;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows golf sessions to be viewed or edited. */
  api_golf_sessions_partial_update: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this golf session. */
        id: number;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedGolfSessionCreate"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedGolfSessionCreate"];
        "multipart/form-data": components["schemas"]["PatchedGolfSessionCreate"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["GolfSessionCreate"];
        };
      };
    };
  };
  /**
   * @description API endpoint that allows individual shot data to be viewed or edited.
   * Supports filtering by session ID. E.g., /api/golf/shots/?session_id=1
   */
  api_golf_shots_list: {
    parameters: {
      query?: {
        /** @description A page number within the paginated result set. */
        page?: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["PaginatedShotDataList"];
        };
      };
    };
  };
  /**
   * @description API endpoint that allows individual shot data to be viewed or edited.
   * Supports filtering by session ID. E.g., /api/golf/shots/?session_id=1
   */
  api_golf_shots_create: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["ShotData"];
        "application/x-www-form-urlencoded": components["schemas"]["ShotData"];
        "multipart/form-data": components["schemas"]["ShotData"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["ShotData"];
        };
      };
    };
  };
  /**
   * @description API endpoint that allows individual shot data to be viewed or edited.
   * Supports filtering by session ID. E.g., /api/golf/shots/?session_id=1
   */
  api_golf_shots_retrieve: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this shot data. */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["ShotData"];
        };
      };
    };
  };
  /**
   * @description API endpoint that allows individual shot data to be viewed or edited.
   * Supports filtering by session ID. E.g., /api/golf/shots/?session_id=1
   */
  api_golf_shots_update: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this shot data. */
        id: number;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["ShotData"];
        "application/x-www-form-urlencoded": components["schemas"]["ShotData"];
        "multipart/form-data": components["schemas"]["ShotData"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["ShotData"];
        };
      };
    };
  };
  /**
   * @description API endpoint that allows individual shot data to be viewed or edited.
   * Supports filtering by session ID. E.g., /api/golf/shots/?session_id=1
   */
  api_golf_shots_destroy: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this shot data. */
        id: number;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /**
   * @description API endpoint that allows individual shot data to be viewed or edited.
   * Supports filtering by session ID. E.g., /api/golf/shots/?session_id=1
   */
  api_golf_shots_partial_update: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this shot data. */
        id: number;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedShotData"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedShotData"];
        "multipart/form-data": components["schemas"]["PatchedShotData"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["ShotData"];
        };
      };
    };
  };
}
